service:
  name: aws-nodejs-jwt

# Add the serverless-webpack plugin
plugins:
  - serverless-webpack
  # - serverless-offline

provider:
  name: aws
  memorySize: 128
  runtime: nodejs8.10
  region: us-east-1

functions:
  auth:
    handler: handlers/auth/authorizer-handler.auth
    cors: true
  jwtTokenGenerator:
    handler: handlers/auth/jwt-handler.getToken
    events:
      - http:
          path: auth/token
          method: post
          cors: true
  publicEndpoint:
    handler: handlers/public-handler.publicEndpoint
    events:
      - http:
          path: api/public
          method: post
          cors: true
  privateEndpoint:
    handler: handlers/private-handler.privateEndpoint
    events:
      - http:
          path: api/private
          method: post
          # See custom authorizer docs here: http://bit.ly/2gXw9pO
          authorizer: auth
          cors: true
  hello:
    handler: handlers/public-handler.hello
    events:
      - http:
          path: api/hello
          method: get
  hello-single:
    handler: handlers/single-handler.hello
    events:
      - http:
          path: api/single
          method: get

resources:
  Resources:
    # This response is needed for custom authorizer failures cors support ¯\_(ツ)_/¯
    GatewayResponse:
      Type: 'AWS::ApiGateway::GatewayResponse'
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
        ResponseType: EXPIRED_TOKEN
        RestApiId:
          Ref: 'ApiGatewayRestApi'
        StatusCode: '401'
    AuthFailureGatewayResponse:
      Type: 'AWS::ApiGateway::GatewayResponse'
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
        ResponseType: UNAUTHORIZED
        RestApiId:
          Ref: 'ApiGatewayRestApi'
        StatusCode: '401'